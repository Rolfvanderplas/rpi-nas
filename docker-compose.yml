version: "3"

services:
  ## Dashboards & Management
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /mnt/external/appdata/heimdall:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped

  ## Network / DNS - Deployed
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    network_mode: host         # lets Pi-hole see LAN broadcasts
    cap_add:
      - NET_ADMIN
    environment:
      TZ: "Europe/Berlin"
      DNSMASQ_LISTENING: "all"
      QUERY_LOGGING: "false"
    volumes:
      - /mnt/external/appdata/pihole/config:/etc/pihole
      - /mnt/external/appdata/pihole/dnsmasq.d:/etc/dnsmasq.d
    restart: unless-stopped

  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=
    restart: unless-stopped

  ## Downloads
  pyload:
    image: linuxserver/pyload
    container_name: pyload
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /mnt/external/appdata/pyload:/config
      - /mnt/external/downloads:/downloads
    ports:
      - 8088:8000
      - 7227:7227
    restart: unless-stopped

  ## Home Assistant + add-ons
  homeassistant:
    image: ghcr.io/home-assistant/raspberrypi5-64-homeassistant
    container_name: home-assistant
    environment:
      - TZ=Europe/Berlin
    volumes:
      - /mnt/external/appdata/homeassistant:/config
    network_mode: host
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/external/appdata/mosquitto/config:/mosquitto/config
      - /mnt/external/appdata/mosquitto/data:/mosquitto/data
      - /mnt/external/appdata/mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    restart: unless-stopped

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:latest
    container_name: zigbee2mqtt
    devices:
      - "/dev/serial/by-id/usb-dresden_elektronik_ingenieurtechnik_GmbH_ConBee_II_DE2669178-if00:/dev/ttyACM0"
    volumes:
      - /mnt/external/appdata/zigbee2mqtt:/app/data
    ports:
      - "8085:8080"
    restart: unless-stopped

  esphome:
    image: esphome/esphome:latest
    container_name: esphome
    volumes:
      - /mnt/external/appdata/esphome:/config
    ports:
      - "6052:6052"
    restart: unless-stopped

  samba:
    image: dperson/samba
    container_name: samba
    environment:
      - TZ=Europe/Berlin
    volumes:
      - /mnt/external:/mount
    ports:
      - "139:139"
      - "445:445"
    restart: unless-stopped

  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - TZ=Europe/Berlin
    volumes:
      - /mnt/external/appdata/wireguard:/config
    ports:
      - "51820:51820/udp"
    restart: unless-stopped

  # music_assistant:
  #   image: ghcr.io/music-assistant/server:latest
  #   container_name: music_assistant
  #   volumes:
  #     - /mnt/external/appdata/music_assistant:/data
  #   ports:
  #     - "8095:8095"
  #   restart: unless-stopped

  # vlc:
  #   image: linuxserver/vlc
  #   container_name: vlc
  #   network_mode: host
  #   restart: unless-stopped

  spotify_connect:
    image: spocon/spocon:latest
    container_name: spotify_connect
    network_mode: host
    restart: unless-stopped

  ## Monitoring stack
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    command: --config-directory /etc/telegraf/telegraf.d
    depends_on:
      - influxdb
    networks:
      - influxdb
    volumes:
      - /mnt/external/appdata/monitoring/telegraf:/etc/telegraf
    restart: always

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      - influxdb
    volumes:
      - influxdb-storage:/var/lib/influxdb
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - influxdb
    ports:
      - 3000:3000
    networks:
      - influxdb
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-storage:/var/lib/grafana
      - /mnt/external/appdata/monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped

volumes:
  portainer_data:
  grafana-storage:
  influxdb-storage:

networks:
  influxdb:
